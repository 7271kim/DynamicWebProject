<?xml version="1.0" encoding="UTF-8"?>
<Configuration status="INFO" name="myLogger" packages="">
    <Properties>
        <Property name="logName">dynamic-web</Property>
        <Property name="layoutPattern">%style{%d{yyyy/MM/dd HH:mm:ss,SSS}}{cyan} %highlight{[%-5p]}{FATAL=bg_red, ERROR=red, INFO=green, DEBUG=blue}  [%C] %style{[%t]}{yellow}- %m%n -</Property>
    </Properties>
    
    <Appenders>
        <Console name="console">
            <PatternLayout pattern="${layoutPattern}"/>
        </Console>
        <!-- 1일마다  D:/log/${logName}_error.log 파일이 D:/log/${logName}/%d{yyyy-MM-dd}/error.log 경로로 이전된다.
            %d{yyyy-MM-dd-hh-mm} >> 1(interval) 분마다
            %d{yyyy-MM-dd-hh} >> 매 1(interval) 시간마다
            %d{yyyy-MM-dd} >> 하루마다 (interval)
        -->
        <RollingFile name="add_err_file" fileName="D:/log/${logName}_error.log" filePattern="D:/log/${logName}/%d{yyyy-MM-dd}/${logName}_error.log">
            <PatternLayout pattern="${layoutPattern}"/>
            <Policies>
                <SizeBasedTriggeringPolicy size="200KB"/>
                <TimeBasedTriggeringPolicy interval="1"/>
            </Policies>
            <DefaultRolloverStrategy max="10" fileIndex="min"/>
        </RollingFile>
        <RollingFile name="sql_info_file" fileName="D:/log/${logName}_sql_info.log" filePattern="D:/log/${logName}/%d{yyyy-MM-dd}/${logName}_sql_info.log">
            <PatternLayout pattern="${layoutPattern}"/>
            <Policies>
                <SizeBasedTriggeringPolicy size="1M"/>
                <TimeBasedTriggeringPolicy interval="1"/>
            </Policies>
            <DefaultRolloverStrategy max="10" fileIndex="min"/>
        </RollingFile>
        <RollingFile name="sql_error_file" fileName="D:/log/${logName}_sql_error.log" filePattern="D:/log/${logName}/%d{yyyy-MM-dd}/${logName}_sql_error.log">
            <PatternLayout pattern="${layoutPattern}"/>
            <Policies>
                <SizeBasedTriggeringPolicy size="200KB"/>
                <TimeBasedTriggeringPolicy interval="1"/>
            </Policies>
            <DefaultRolloverStrategy max="10" fileIndex="min"/>
        </RollingFile>
    </Appenders>
    
    <Loggers>
        <Root level="INFO" additivity="false">
            <AppenderRef ref="console"/>
        </Root>
        
        <Logger name="org.springframework" additivity="false">
            <AppenderRef ref="console" level="WARN" />
            <AppenderRef ref="add_err_file" level="ERROR" />
        </Logger>
        
        <Logger name="hello" additivity="false">
            <AppenderRef ref="console" level="INFO" />
            <AppenderRef ref="add_err_file" level="ERROR" />
        </Logger>
        
        <Logger name="controller" additivity="false">
            <AppenderRef  ref="console" level="INFO" />
            <AppenderRef  ref="add_err_file" level="ERROR" />
        </Logger>
        
        <Logger name="dao" additivity="false">
            <AppenderRef  ref="console" level="INFO" />
            <AppenderRef  ref="add_err_file" level="ERROR" />
        </Logger>
        
        <Logger name="model" additivity="false">
            <AppenderRef  ref="console" level="INFO" />
            <AppenderRef  ref="add_err_file" level="ERROR" />
        </Logger>
        
        <Logger name="services" additivity="false">
            <AppenderRef  ref="console" level="INFO" />
            <AppenderRef  ref="add_err_file" level="ERROR" />
        </Logger>
        
        <Logger name="sqlMap" additivity="false">
            <AppenderRef  ref="console" level="INFO" />
            <AppenderRef  ref="add_err_file" level="ERROR" />
        </Logger>
        
        <!-- https://log4jdbc.brunorozendo.com/ log4j2 DB 관련 -->
        <!--  ResultSet을 제외한 모든 JDBC 호출 정보를 로그로 남긴다. 많은 양의 로그가 생성되므로 특별히  JDBC 문제를 추적해야 할 필요가 있는 경우를 제외하고는 사용을 권장하지 않는다. -->
        <!-- SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 포함한다. -->
        <!-- ResultSet을 포함한 모든 JDBC 호출 정보를 로그로 남기므로 매우 방대한 양의 로그가 생성된다.  -->
        <!--  SQL 결과 조회된 데이터의 table을 로그로 남긴다. -->
        <Logger name="log4jdbc.log4j2"  additivity="false">
            <MarkerFilter marker="LOG4JDBC_JDBC" onMatch="DENY" onMismatch="ACCEPT"/>
            <AppenderRef ref="console" level="INFO"/>
            <AppenderRef ref="sql_info_file" level="INFO"/>
            <AppenderRef ref="sql_error_file" level="ERROR"/>
        </Logger>
    </Loggers>
</Configuration>



















